// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace WTM.RestApi.Client.Models
{
    public partial class Memorabilia
    {
        private string _description;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private string _image;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Image
        {
            get { return this._image; }
            set { this._image = value; }
        }
        
        private string _tag;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Tag
        {
            get { return this._tag; }
            set { this._tag = value; }
        }
        
        private string _title;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Title
        {
            get { return this._title; }
            set { this._title = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Memorabilia class.
        /// </summary>
        public Memorabilia()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken descriptionValue = inputObject["Description"];
                if (descriptionValue != null && descriptionValue.Type != JTokenType.Null)
                {
                    this.Description = ((string)descriptionValue);
                }
                JToken imageValue = inputObject["Image"];
                if (imageValue != null && imageValue.Type != JTokenType.Null)
                {
                    this.Image = ((string)imageValue);
                }
                JToken tagValue = inputObject["Tag"];
                if (tagValue != null && tagValue.Type != JTokenType.Null)
                {
                    this.Tag = ((string)tagValue);
                }
                JToken titleValue = inputObject["Title"];
                if (titleValue != null && titleValue.Type != JTokenType.Null)
                {
                    this.Title = ((string)titleValue);
                }
            }
        }
    }
}
