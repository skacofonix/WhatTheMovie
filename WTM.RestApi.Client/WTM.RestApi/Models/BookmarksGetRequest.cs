// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace WTM.RestApi.Client.Models
{
    public partial class BookmarksGetRequest
    {
        private int? _limit;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Limit
        {
            get { return this._limit; }
            set { this._limit = value; }
        }
        
        private int? _start;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Start
        {
            get { return this._start; }
            set { this._start = value; }
        }
        
        private string _token;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Token
        {
            get { return this._token; }
            set { this._token = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the BookmarksGetRequest class.
        /// </summary>
        public BookmarksGetRequest()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the BookmarksGetRequest class with
        /// required arguments.
        /// </summary>
        public BookmarksGetRequest(string token)
            : this()
        {
            if (token == null)
            {
                throw new ArgumentNullException("token");
            }
            this.Token = token;
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type BookmarksGetRequest
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Token == null)
            {
                throw new ArgumentNullException("Token");
            }
            if (this.Limit != null)
            {
                outputObject["Limit"] = this.Limit.Value;
            }
            if (this.Start != null)
            {
                outputObject["Start"] = this.Start.Value;
            }
            if (this.Token != null)
            {
                outputObject["Token"] = this.Token;
            }
            return outputObject;
        }
    }
}
