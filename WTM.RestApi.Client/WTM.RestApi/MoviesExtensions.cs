// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using WTM.RestApi.Client;
using WTM.RestApi.Client.Models;

namespace WTM.RestApi.Client
{
    public static partial class MoviesExtensions
    {
        /// <param name='operations'>
        /// Reference to the WTM.RestApi.Client.IMovies.
        /// </param>
        /// <param name='name'>
        /// Required.
        /// </param>
        public static string Get(this IMovies operations, string name)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMovies)s).GetAsync(name);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the WTM.RestApi.Client.IMovies.
        /// </param>
        /// <param name='name'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetAsync(this IMovies operations, string name, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetWithOperationResponseAsync(name, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the WTM.RestApi.Client.IMovies.
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        public static MovieSearchTagResponse GetByTag(this IMovies operations, MovieSearchTagRequest request)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMovies)s).GetByTagAsync(request);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the WTM.RestApi.Client.IMovies.
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<MovieSearchTagResponse> GetByTagAsync(this IMovies operations, MovieSearchTagRequest request, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<WTM.RestApi.Client.Models.MovieSearchTagResponse> result = await operations.GetByTagWithOperationResponseAsync(request, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
