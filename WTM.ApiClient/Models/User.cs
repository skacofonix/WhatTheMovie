// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Newtonsoft.Json.Linq;

namespace WTM.ApiClient.Models
{
    public partial class User
    {
        private string about;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string About
        {
            get { return this.about; }
            set { this.about = value; }
        }
        
        private int? age;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Age
        {
            get { return this.age; }
            set { this.age = value; }
        }
        
        private string country;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Country
        {
            get { return this.country; }
            set { this.country = value; }
        }
        
        private int? favouriteCharacters;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FavouriteCharacters
        {
            get { return this.favouriteCharacters; }
            set { this.favouriteCharacters = value; }
        }
        
        private double? favouritedRating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? FavouritedRating
        {
            get { return this.favouritedRating; }
            set { this.favouritedRating = value; }
        }
        
        private int? favouriteMovies;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FavouriteMovies
        {
            get { return this.favouriteMovies; }
            set { this.favouriteMovies = value; }
        }
        
        private int? favouriteSeries;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FavouriteSeries
        {
            get { return this.favouriteSeries; }
            set { this.favouriteSeries = value; }
        }
        
        private int? favouriteSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FavouriteSnapshots
        {
            get { return this.favouriteSnapshots; }
            set { this.favouriteSnapshots = value; }
        }
        
        private int? featureFilmsSolved;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FeatureFilmsSolved
        {
            get { return this.featureFilmsSolved; }
            set { this.featureFilmsSolved = value; }
        }
        
        private IList<string> friends;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Friends
        {
            get { return this.friends; }
            set { this.friends = value; }
        }
        
        private string gender;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Gender
        {
            get { return this.gender; }
            set { this.gender = value; }
        }
        
        private int? id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this.id; }
            set { this.id = value; }
        }
        
        private string imageUri;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ImageUri
        {
            get { return this.imageUri; }
            set { this.imageUri = value; }
        }
        
        private string level;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Level
        {
            get { return this.level; }
            set { this.level = value; }
        }
        
        private IList<Memorabilia> memorabiliaList;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Memorabilia> MemorabiliaList
        {
            get { return this.memorabiliaList; }
            set { this.memorabiliaList = value; }
        }
        
        private string name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this.name; }
            set { this.name = value; }
        }
        
        private int? playingSinceMonth;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? PlayingSinceMonth
        {
            get { return this.playingSinceMonth; }
            set { this.playingSinceMonth = value; }
        }
        
        private int? playingSinceYear;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? PlayingSinceYear
        {
            get { return this.playingSinceYear; }
            set { this.playingSinceYear = value; }
        }
        
        private double? receivingRating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? ReceivingRating
        {
            get { return this.receivingRating; }
            set { this.receivingRating = value; }
        }
        
        private double? score;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Score
        {
            get { return this.score; }
            set { this.score = value; }
        }
        
        private int? snapshotSolved;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? SnapshotSolved
        {
            get { return this.snapshotSolved; }
            set { this.snapshotSolved = value; }
        }
        
        private int? uploadCharacterSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadCharacterSnapshots
        {
            get { return this.uploadCharacterSnapshots; }
            set { this.uploadCharacterSnapshots = value; }
        }
        
        private int? uploadFeatureFilmSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadFeatureFilmSnapshots
        {
            get { return this.uploadFeatureFilmSnapshots; }
            set { this.uploadFeatureFilmSnapshots = value; }
        }
        
        private int? uploadRejectedSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadRejectedSnapshots
        {
            get { return this.uploadRejectedSnapshots; }
            set { this.uploadRejectedSnapshots = value; }
        }
        
        private int? uploadReplacementSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadReplacementSnapshots
        {
            get { return this.uploadReplacementSnapshots; }
            set { this.uploadReplacementSnapshots = value; }
        }
        
        private int? uploadSnapshotsOfTheDay;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadSnapshotsOfTheDay
        {
            get { return this.uploadSnapshotsOfTheDay; }
            set { this.uploadSnapshotsOfTheDay = value; }
        }
        
        private int? uploadTitleSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadTitleSnapshots
        {
            get { return this.uploadTitleSnapshots; }
            set { this.uploadTitleSnapshots = value; }
        }
        
        private int? uploadVaultSnapshots;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UploadVaultSnapshots
        {
            get { return this.uploadVaultSnapshots; }
            set { this.uploadVaultSnapshots = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the User class.
        /// </summary>
        public User()
        {
            this.Friends = new List<string>();
            this.MemorabiliaList = new List<Memorabilia>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken aboutValue = inputObject["About"];
                if (aboutValue != null && aboutValue.Type != JTokenType.Null)
                {
                    this.About = ((string)aboutValue);
                }
                JToken ageValue = inputObject["Age"];
                if (ageValue != null && ageValue.Type != JTokenType.Null)
                {
                    this.Age = ((int)ageValue);
                }
                JToken countryValue = inputObject["Country"];
                if (countryValue != null && countryValue.Type != JTokenType.Null)
                {
                    this.Country = ((string)countryValue);
                }
                JToken favouriteCharactersValue = inputObject["FavouriteCharacters"];
                if (favouriteCharactersValue != null && favouriteCharactersValue.Type != JTokenType.Null)
                {
                    this.FavouriteCharacters = ((int)favouriteCharactersValue);
                }
                JToken favouritedRatingValue = inputObject["FavouritedRating"];
                if (favouritedRatingValue != null && favouritedRatingValue.Type != JTokenType.Null)
                {
                    this.FavouritedRating = ((double)favouritedRatingValue);
                }
                JToken favouriteMoviesValue = inputObject["FavouriteMovies"];
                if (favouriteMoviesValue != null && favouriteMoviesValue.Type != JTokenType.Null)
                {
                    this.FavouriteMovies = ((int)favouriteMoviesValue);
                }
                JToken favouriteSeriesValue = inputObject["FavouriteSeries"];
                if (favouriteSeriesValue != null && favouriteSeriesValue.Type != JTokenType.Null)
                {
                    this.FavouriteSeries = ((int)favouriteSeriesValue);
                }
                JToken favouriteSnapshotsValue = inputObject["FavouriteSnapshots"];
                if (favouriteSnapshotsValue != null && favouriteSnapshotsValue.Type != JTokenType.Null)
                {
                    this.FavouriteSnapshots = ((int)favouriteSnapshotsValue);
                }
                JToken featureFilmsSolvedValue = inputObject["FeatureFilmsSolved"];
                if (featureFilmsSolvedValue != null && featureFilmsSolvedValue.Type != JTokenType.Null)
                {
                    this.FeatureFilmsSolved = ((int)featureFilmsSolvedValue);
                }
                JToken friendsSequence = ((JToken)inputObject["Friends"]);
                if (friendsSequence != null && friendsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken friendsValue in ((JArray)friendsSequence))
                    {
                        this.Friends.Add(((string)friendsValue));
                    }
                }
                JToken genderValue = inputObject["Gender"];
                if (genderValue != null && genderValue.Type != JTokenType.Null)
                {
                    this.Gender = ((string)genderValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken imageUriValue = inputObject["ImageUri"];
                if (imageUriValue != null && imageUriValue.Type != JTokenType.Null)
                {
                    this.ImageUri = ((string)imageUriValue);
                }
                JToken levelValue = inputObject["Level"];
                if (levelValue != null && levelValue.Type != JTokenType.Null)
                {
                    this.Level = ((string)levelValue);
                }
                JToken memorabiliaListSequence = ((JToken)inputObject["MemorabiliaList"]);
                if (memorabiliaListSequence != null && memorabiliaListSequence.Type != JTokenType.Null)
                {
                    foreach (JToken memorabiliaListValue in ((JArray)memorabiliaListSequence))
                    {
                        Memorabilia memorabilia = new Memorabilia();
                        memorabilia.DeserializeJson(memorabiliaListValue);
                        this.MemorabiliaList.Add(memorabilia);
                    }
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken playingSinceMonthValue = inputObject["PlayingSinceMonth"];
                if (playingSinceMonthValue != null && playingSinceMonthValue.Type != JTokenType.Null)
                {
                    this.PlayingSinceMonth = ((int)playingSinceMonthValue);
                }
                JToken playingSinceYearValue = inputObject["PlayingSinceYear"];
                if (playingSinceYearValue != null && playingSinceYearValue.Type != JTokenType.Null)
                {
                    this.PlayingSinceYear = ((int)playingSinceYearValue);
                }
                JToken receivingRatingValue = inputObject["ReceivingRating"];
                if (receivingRatingValue != null && receivingRatingValue.Type != JTokenType.Null)
                {
                    this.ReceivingRating = ((double)receivingRatingValue);
                }
                JToken scoreValue = inputObject["Score"];
                if (scoreValue != null && scoreValue.Type != JTokenType.Null)
                {
                    this.Score = ((double)scoreValue);
                }
                JToken snapshotSolvedValue = inputObject["SnapshotSolved"];
                if (snapshotSolvedValue != null && snapshotSolvedValue.Type != JTokenType.Null)
                {
                    this.SnapshotSolved = ((int)snapshotSolvedValue);
                }
                JToken uploadCharacterSnapshotsValue = inputObject["UploadCharacterSnapshots"];
                if (uploadCharacterSnapshotsValue != null && uploadCharacterSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadCharacterSnapshots = ((int)uploadCharacterSnapshotsValue);
                }
                JToken uploadFeatureFilmSnapshotsValue = inputObject["UploadFeatureFilmSnapshots"];
                if (uploadFeatureFilmSnapshotsValue != null && uploadFeatureFilmSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadFeatureFilmSnapshots = ((int)uploadFeatureFilmSnapshotsValue);
                }
                JToken uploadRejectedSnapshotsValue = inputObject["UploadRejectedSnapshots"];
                if (uploadRejectedSnapshotsValue != null && uploadRejectedSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadRejectedSnapshots = ((int)uploadRejectedSnapshotsValue);
                }
                JToken uploadReplacementSnapshotsValue = inputObject["UploadReplacementSnapshots"];
                if (uploadReplacementSnapshotsValue != null && uploadReplacementSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadReplacementSnapshots = ((int)uploadReplacementSnapshotsValue);
                }
                JToken uploadSnapshotsOfTheDayValue = inputObject["UploadSnapshotsOfTheDay"];
                if (uploadSnapshotsOfTheDayValue != null && uploadSnapshotsOfTheDayValue.Type != JTokenType.Null)
                {
                    this.UploadSnapshotsOfTheDay = ((int)uploadSnapshotsOfTheDayValue);
                }
                JToken uploadTitleSnapshotsValue = inputObject["UploadTitleSnapshots"];
                if (uploadTitleSnapshotsValue != null && uploadTitleSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadTitleSnapshots = ((int)uploadTitleSnapshotsValue);
                }
                JToken uploadVaultSnapshotsValue = inputObject["UploadVaultSnapshots"];
                if (uploadVaultSnapshotsValue != null && uploadVaultSnapshotsValue.Type != JTokenType.Null)
                {
                    this.UploadVaultSnapshots = ((int)uploadVaultSnapshotsValue);
                }
            }
        }
    }
}
