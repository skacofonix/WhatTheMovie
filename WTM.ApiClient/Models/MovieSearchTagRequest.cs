// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Newtonsoft.Json.Linq;

namespace WTM.ApiClient.Models
{
    public partial class MovieSearchTagRequest
    {
        private IList<MovieSummary> items;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<MovieSummary> Items
        {
            get { return this.items; }
            set { this.items = value; }
        }
        
        private int? limit;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Limit
        {
            get { return this.limit; }
            set { this.limit = value; }
        }
        
        private int? start;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Start
        {
            get { return this.start; }
            set { this.start = value; }
        }
        
        private string token;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Token
        {
            get { return this.token; }
            set { this.token = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the MovieSearchTagRequest class.
        /// </summary>
        public MovieSearchTagRequest()
        {
            this.Items = new List<MovieSummary>();
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type MovieSearchTagRequest
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            JArray itemsSequence = null;
            if (this.Items != null)
            {
                itemsSequence = new JArray();
                outputObject["Items"] = itemsSequence;
                foreach (MovieSummary itemsItem in this.Items)
                {
                    if (itemsItem != null)
                    {
                        itemsSequence.Add(itemsItem.SerializeJson(null));
                    }
                }
            }
            if (this.Limit != null)
            {
                outputObject["Limit"] = this.Limit.Value;
            }
            if (this.Start != null)
            {
                outputObject["Start"] = this.Start.Value;
            }
            if (this.Token != null)
            {
                outputObject["Token"] = this.Token;
            }
            return outputObject;
        }
    }
}
