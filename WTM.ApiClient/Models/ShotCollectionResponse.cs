// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;

namespace WTM.ApiClient.Models
{
    public partial class ShotCollectionResponse
    {
        private DateTimeOffset date;
        
        /// <summary>
        /// Required.
        /// </summary>
        public DateTimeOffset Date
        {
            get { return this.date; }
            set { this.date = value; }
        }
        
        private int displayCount;
        
        /// <summary>
        /// Required.
        /// </summary>
        public int DisplayCount
        {
            get { return this.displayCount; }
            set { this.displayCount = value; }
        }
        
        private int displayMax;
        
        /// <summary>
        /// Required.
        /// </summary>
        public int DisplayMax
        {
            get { return this.displayMax; }
            set { this.displayMax = value; }
        }
        
        private int displayMin;
        
        /// <summary>
        /// Required.
        /// </summary>
        public int DisplayMin
        {
            get { return this.displayMin; }
            set { this.displayMin = value; }
        }
        
        private IList<ShotSummary> items;
        
        /// <summary>
        /// Required.
        /// </summary>
        public IList<ShotSummary> Items
        {
            get { return this.items; }
            set { this.items = value; }
        }
        
        private int totalCount;
        
        /// <summary>
        /// Required.
        /// </summary>
        public int TotalCount
        {
            get { return this.totalCount; }
            set { this.totalCount = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ShotCollectionResponse class.
        /// </summary>
        public ShotCollectionResponse()
        {
            this.Items = new List<ShotSummary>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken dateValue = inputObject["Date"];
                if (dateValue != null && dateValue.Type != JTokenType.Null)
                {
                    this.Date = ((DateTimeOffset)dateValue);
                }
                JToken displayCountValue = inputObject["DisplayCount"];
                if (displayCountValue != null && displayCountValue.Type != JTokenType.Null)
                {
                    this.DisplayCount = ((int)displayCountValue);
                }
                JToken displayMaxValue = inputObject["DisplayMax"];
                if (displayMaxValue != null && displayMaxValue.Type != JTokenType.Null)
                {
                    this.DisplayMax = ((int)displayMaxValue);
                }
                JToken displayMinValue = inputObject["DisplayMin"];
                if (displayMinValue != null && displayMinValue.Type != JTokenType.Null)
                {
                    this.DisplayMin = ((int)displayMinValue);
                }
                JToken itemsSequence = ((JToken)inputObject["Items"]);
                if (itemsSequence != null && itemsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken itemsValue in ((JArray)itemsSequence))
                    {
                        ShotSummary iShotSummary = new ShotSummary();
                        iShotSummary.DeserializeJson(itemsValue);
                        this.Items.Add(iShotSummary);
                    }
                }
                JToken totalCountValue = inputObject["TotalCount"];
                if (totalCountValue != null && totalCountValue.Type != JTokenType.Null)
                {
                    this.TotalCount = ((int)totalCountValue);
                }
            }
        }
    }
}
